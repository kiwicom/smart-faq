# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2
defaults: &defaults
  working_directory: ~/smart-faq
  docker:
    - image: circleci/node:9.0
jobs:
  test-ci:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn

      - save_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run: yarn test-ci

  deploy:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn && yarn build:pages

  surge-deploy:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          command: yarn && yarn build:bundle && yarn deploy:surge && yarn deploy:updateURL ${CIRCLE_BRANCH} https://smartfaq-$(git rev-parse --abbrev-ref HEAD).surge.sh

  cypress-tests:
    <<: *defaults
    docker:
      - image: cypress/base:8
        environment:
          ## this enables colors in the output
          TERM: xterm
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn
      - run:
          command: yarn start:ci
          background: true
      - run:
          shell: /bin/sh
          command: |
            sleep 45s
            :
      - run:
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 20 http://localhost:8080
            :
      - run: yarn cypress:run-ci

  publish:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: install
          command: yarn
      - run:
          name: commitlint
          command: yarn run semantic-commitlint -- --ci
      - run:
          name: release
          command: yarn run semantic-release || true


workflows:
  version: 2
  # on each push publish the app to Surge and run integration tests
  cypress-test-and-surge-deploy:
    jobs:
      - test-ci:
         filters:
           branches:
             ignore: master
      - cypress-tests:
          filters:
            branches:
              ignore: master
          requires:
            - test-ci
      - surge-deploy:
         requires:
           - test-ci
           - cypress-tests
         filters:
           branches:
             ignore: master

  # publish app to Github pages after merge into master
  test-ci-and-gh-pages-deploy:
    jobs:
      - test-ci:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - test-ci
          filters:
            branches:
              only: master
  # publish npm package when new release tag is added on master
  test-ci-and-publish:
    jobs:
      - test-ci:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - cypress-tests:
          requires:
            - test-ci
      - publish:
          requires:
            - test-ci
            - cypress-tests
          # https://circleci.com/docs/2.0/workflows/#git-tag-job-execution
          filters:
            tags:
              only: /^v.*/ # only valid version tags, e.g. v0.0.1, v12.3.5
            branches:
              ignore: /.*/
