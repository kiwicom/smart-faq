{
  "env": {
    "node": true,
    "jest": true,
    "browser": true,
    "es6": true,
    "cypress/globals": true
  },
  "globals": {
    "__": true
  },
  "parser": "babel-eslint",
  "extends": [
    "airbnb",
    "eslint:recommended",
    "prettier",
    "plugin:flowtype/recommended",
    "plugin:react/recommended",
    "plugin:jest/recommended"
  ],
  "plugins": [
    "import",
    "jest",
    "prettier",
    "flowtype",
    "react",
    "cypress"
  ],
  "rules": {
    "no-use-before-define": "off",
    "no-shadow": "off",
    "no-warning-comments": "warn",
    "prefer-const": "error",
    "eol-last": "error",
    "prettier/prettier": [
      "error",
      {
        "bracketSpacing": true,
        "printWidth": 80,
        "singleQuote": true,
        "tabWidth": 2,
        "trailingComma": "all"
      }
    ],
    "jsx-a11y/anchor-is-valid": [ "error", {
      "components": [ "Link" ],
      "specialLink": [ "to" ]
    }],
    "react/no-access-state-in-setstate": "error",
    "react/jsx-uses-vars": "error",
    "react/require-default-props": "off", // Optional props can be undefined.
    "react/jsx-filename-extension": ["error", { "extensions": [".js"] }], // Don't use jsx
    "react/default-props-match-prop-types": "off",
    "react/prefer-stateless-function": "error",
    "react/sort-comp": ["error", {
      "order": [
        "type-annotations",
        "static-methods",
        "lifecycle",
        "everything-else",
        "render"
      ]
    }],
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*.test.js",
          "**/*.spec.js",
          "/config/**"
        ]
      }
    ],
    "import/order": ["error",
      {
        "groups": [
          [
            "builtin",
            "external"
          ],
          [
            "parent",
            "sibling"
          ],
          "index"
        ],
        "newlines-between": "always"
      }],
    "flowtype/require-valid-file-annotation": [
      "error",
      "always"
    ],
    "flowtype/space-after-type-colon": [
      2,
      "always",
      {
        "allowLineBreak": true
      }
    ],
    "flowtype/no-weak-types": [
      "warn",
      {
        "any": false,
        "Object": true,
        "Function": true
      }
    ],
    "flowtype/type-import-style": ["error", "declaration"]
  }
}
